const express = require('express');
const router = express.Router();

// Array de objetos que simula um banco de dados
let items = [
  { id: 1, name: 'Item 1' },
  { id: 2, name: 'Item 2' },
  { id: 3, name: 'Item 3' }
];

// Rota para listar todos os itens
router.get('/', (req, res) => {
  res.send(items);
});

// Rota para buscar um item pelo ID
router.get('/:id', (req, res) => {
  const id = parseInt(req.params.id);
  const item = items.find(item => item.id === id);
  if (item) {
    res.send(item);
  } else {
    res.status(404).send({ message: 'Item não encontrado' });
  }
});

// Rota para criar um novo item
router.post('/', (req, res) => {
  const newItem = {
    id: items.length + 1,
    name: req.body.name
  };
  items.push(newItem);
  res.status(201).send(newItem);
});

// Rota para atualizar um item existente
router.put('/:id', (req, res) => {
  const id = parseInt(req.params.id);
  const itemIndex = items.findIndex(item => item.id === id);
  if (itemIndex !== -1) {
    items[itemIndex].name = req.body.name;
    res.send(items[itemIndex]);
  } else {
    res.status(404).send({ message: 'Item não encontrado' });
  }
});

// Rota para excluir um item existente
router.delete('/:id', (req, res) => {
  const id = parseInt(req.params.id);
  const itemIndex = items.findIndex(item => item.id === id);
  if (itemIndex !== -1) {
    items.splice(itemIndex, 1);
    res.status(204).send();
  } else {
    res.status(404).send({ message: 'Item não encontrado' });
  }
});

module.exports = router;
